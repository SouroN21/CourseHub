{"ast":null,"code":"const API_CONFIG = {\n  BASE_URL: 'http://localhost:5000/api'\n};\nexport default API_CONFIG;\n\n// Mark course content as complete for a student\nexport async function markContentComplete(courseId, contentId, token) {\n  const res = await fetch(`${API_CONFIG.BASE_URL}/enrollments/${courseId}/complete/${contentId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    const error = await res.json();\n    throw new Error(error.message || 'Failed to update progress');\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_CONFIG","BASE_URL","markContentComplete","courseId","contentId","token","res","fetch","method","headers","Authorization","ok","error","json","Error","message"],"sources":["D:/INTERN/CourseHub/frontend/src/config/apiConfig.js"],"sourcesContent":["const API_CONFIG = {\r\n  BASE_URL: 'http://localhost:5000/api',\r\n};\r\n\r\nexport default API_CONFIG;\r\n\r\n// Mark course content as complete for a student\r\nexport async function markContentComplete(courseId, contentId, token) {\r\n  const res = await fetch(`${API_CONFIG.BASE_URL}/enrollments/${courseId}/complete/${contentId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  if (!res.ok) {\r\n    const error = await res.json();\r\n    throw new Error(error.message || 'Failed to update progress');\r\n  }\r\n  return res.json();\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG;EACjBC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAeD,UAAU;;AAEzB;AACA,OAAO,eAAeE,mBAAmBA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,EAAE;EACpE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,UAAU,CAACC,QAAQ,gBAAgBE,QAAQ,aAAaC,SAAS,EAAE,EAAE;IAC9FI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUL,KAAK;IAChC;EACF,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACK,EAAE,EAAE;IACX,MAAMC,KAAK,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;IAC9B,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,2BAA2B,CAAC;EAC/D;EACA,OAAOT,GAAG,CAACO,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}