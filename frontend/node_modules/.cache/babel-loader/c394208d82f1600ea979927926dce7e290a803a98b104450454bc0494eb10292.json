{"ast":null,"code":"const express = require('express');\nconst mongoose = require('mongoose');\nconst dotenv = require('dotenv');\nconst cors = require('cors'); // Added CORS\nconst userRoutes = require('./routes/userRoutes');\nconst courseRoutes = require('./routes/courseRoutes');\ndotenv.config();\nconst app = express();\n\n// Enable CORS for frontend origin\napp.use(cors({\n  origin: 'http://localhost:3000',\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n  allowedHeaders: ['Content-Type', 'Authorization']\n}));\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect(process.env.MONGO_URI).then(() => console.log('MongoDB connected')).catch(err => console.error('MongoDB connection error:', err));\n\n// Routes\napp.use('/api/auth', userRoutes);\napp.use('/api/courses', courseRoutes);\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));","map":{"version":3,"names":["express","require","mongoose","dotenv","cors","userRoutes","courseRoutes","config","app","use","origin","methods","allowedHeaders","json","connect","process","env","MONGO_URI","then","console","log","catch","err","error","PORT","listen"],"sources":["D:/INTERN/CourseHub/frontend/src/App.js"],"sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst dotenv = require('dotenv');\nconst cors = require('cors'); // Added CORS\nconst userRoutes = require('./routes/userRoutes');\nconst courseRoutes = require('./routes/courseRoutes');\n\ndotenv.config();\n\nconst app = express();\n\n// Enable CORS for frontend origin\napp.use(cors({\n  origin: 'http://localhost:3000',\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n  allowedHeaders: ['Content-Type', 'Authorization'],\n}));\n\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect(process.env.MONGO_URI)\n  .then(() => console.log('MongoDB connected'))\n  .catch(err => console.error('MongoDB connection error:', err));\n\n// Routes\napp.use('/api/auth', userRoutes);\napp.use('/api/courses', courseRoutes);\n\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9B,MAAMI,UAAU,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AACjD,MAAMK,YAAY,GAAGL,OAAO,CAAC,uBAAuB,CAAC;AAErDE,MAAM,CAACI,MAAM,CAAC,CAAC;AAEf,MAAMC,GAAG,GAAGR,OAAO,CAAC,CAAC;;AAErB;AACAQ,GAAG,CAACC,GAAG,CAACL,IAAI,CAAC;EACXM,MAAM,EAAE,uBAAuB;EAC/BC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC;EACzCC,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe;AAClD,CAAC,CAAC,CAAC;AAEHJ,GAAG,CAACC,GAAG,CAACT,OAAO,CAACa,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAX,QAAQ,CAACY,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC,CACpCC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAC5CC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC,CAAC;;AAEhE;AACAd,GAAG,CAACC,GAAG,CAAC,WAAW,EAAEJ,UAAU,CAAC;AAChCG,GAAG,CAACC,GAAG,CAAC,cAAc,EAAEH,YAAY,CAAC;AAErC,MAAMkB,IAAI,GAAGT,OAAO,CAACC,GAAG,CAACQ,IAAI,IAAI,IAAI;AACrChB,GAAG,CAACiB,MAAM,CAACD,IAAI,EAAE,MAAML,OAAO,CAACC,GAAG,CAAC,0BAA0BI,IAAI,EAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}